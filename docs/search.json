[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bem-vindo ao ClubeR",
    "section": "",
    "text": "1 üéì Clube do C√≥digo - UFPA/Bragan√ßa\nEste site √© um espa√ßo colaborativo criado para apoiar estudantes de gradua√ß√£o e p√≥s-gradua√ß√£o interessados em programa√ß√£o aplicada √† pesquisa cient√≠fica, com foco em R e Python.\n\n\n\n\n\n\nNote\n\n\n\nMiss√£o: Tornar a programa√ß√£o cient√≠fica mais acess√≠vel para a comunidade acad√™mica do litoral amaz√¥nico.\n\n\nExplore nossos tutoriais organizados por tema ou confira os posts mais recentes no blog."
  },
  {
    "objectID": "cluber.html",
    "href": "cluber.html",
    "title": "cluber",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "cluber.html#quarto",
    "href": "cluber.html#quarto",
    "title": "cluber",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog do ClubeR",
    "section": "",
    "text": "1 üóûÔ∏è √öltimos Tutoriais e Artigos\nNesta se√ß√£o voc√™ encontrar√° os posts mais recentes publicados pelo ClubeR. Aqui compartilhamos avan√ßos, reflex√µes e novidades sobre programa√ß√£o cient√≠fica.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn√°lise descritiva com dplyr\n\n\n\n\n\n\n\n\n\n\n\nApr 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nPrefer√™ncias do RStudio\n\n\n\n\n\n\n\n\n\n\n\nApr 14, 2025\n\n\nEvaldo Silva\n\n\n\n\n\n\n\n\n\n\n\n\nPublica√ß√£o de Website com Quarto e GitHub Pages\n\n\n\n\n\n\n\n\n\n\n\nApr 13, 2025\n\n\nEvaldo Silva\n\n\n\n\n\n\n\n\n\n\n\n\nInstalando o R, RStudio e Rtools\n\n\nCriando um ambiente eficiente para uso da Linguagem R\n\n\n\n\n\n\n\n\nApr 11, 2025\n\n\nEvaldo Silva\n\n\n\n\n\n\n\n\n\n\n\n\nRegress√£o linear com ggplot2 e broom\n\n\n\n\n\n\n\n\n\n\n\nApr 10, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nANOVA com aov() e emmeans\n\n\n\n\n\n\n\n\n\n\n\nMar 30, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/analise-descritiva/index.html",
    "href": "posts/analise-descritiva/index.html",
    "title": "An√°lise descritiva com dplyr",
    "section": "",
    "text": "1 üîç An√°lise descritiva com dplyr\nNeste tutorial, exploramos como utilizar o pacote dplyr para realizar uma an√°lise descritiva eficiente de conjuntos de dados.\n\nlibrary(dplyr)\n\n\nAnexando pacote: 'dplyr'\n\n\nOs seguintes objetos s√£o mascarados por 'package:stats':\n\n    filter, lag\n\n\nOs seguintes objetos s√£o mascarados por 'package:base':\n\n    intersect, setdiff, setequal, union\n\ndados &lt;- tibble::tibble(\n  especie = c(\"Tambaqui\", \"Tambaqui\", \"Pirarucu\", \"Pirarucu\"),\n  peso = c(1.2, 1.5, 10.5, 11.0)\n)\n\ndados |&gt;\n  group_by(especie) |&gt;\n  summarise(media_peso = mean(peso))\n\n# A tibble: 2 √ó 2\n  especie  media_peso\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Pirarucu      10.8 \n2 Tambaqui       1.35"
  },
  {
    "objectID": "posts/regressao-linear/index.html",
    "href": "posts/regressao-linear/index.html",
    "title": "Regress√£o linear com ggplot2 e broom",
    "section": "",
    "text": "1 üìà Regress√£o linear com ggplot2 e broom\nVeja como ajustar um modelo linear e extrair seus par√¢metros com broom, visualizando os resultados com ggplot2.\n\nlibrary(ggplot2)\nlibrary(broom)\n\nmodelo &lt;- lm(mpg ~ wt, data = mtcars)\nglance(modelo)\n\n# A tibble: 1 √ó 12\n  r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.753         0.745  3.05      91.4 1.29e-10     1  -80.0  166.  170.\n# ‚Ñπ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;"
  },
  {
    "objectID": "tutoriais.html",
    "href": "tutoriais.html",
    "title": "Tutoriais",
    "section": "",
    "text": "Navegue pelos conte√∫dos organizados por √°rea de interesse.\n\n\n\nInstala√ß√£o do R, RStudio e Rtools\nAjustes de Prefer√™ncias da IDE RStudio\n\n\n\n\n\nInstala√ß√£o do R, RStudio e Rtools\nAn√°lise descritiva com dplyr\nRegress√£o linear com ggplot2 e broom\nANOVA com aov() e emmeans\n\n\n\n\n\nManipula√ß√£o de dados de campo\nVisualiza√ß√£o de vari√°veis ambientais\nModelos de crescimento em peixes\n\n\n\n\n\nAmbiente Jupyter\nLeitura e tratamento de dados com pandas\nGr√°ficos com matplotlib e seaborn\n\n\n\n\n\nPublicando site pessoal ou Blog no Github"
  },
  {
    "objectID": "tutoriais.html#estat√≠stica-com-r",
    "href": "tutoriais.html#estat√≠stica-com-r",
    "title": "Tutoriais",
    "section": "",
    "text": "Instala√ß√£o do R, RStudio e Rtools\nAn√°lise descritiva com dplyr\nRegress√£o linear com ggplot2 e broom\nANOVA com aov() e emmeans"
  },
  {
    "objectID": "tutoriais.html#aplica√ß√µes-em-bioecologia",
    "href": "tutoriais.html#aplica√ß√µes-em-bioecologia",
    "title": "Tutoriais",
    "section": "",
    "text": "Manipula√ß√£o de dados de campo\nVisualiza√ß√£o de vari√°veis ambientais\nModelos de crescimento em peixes"
  },
  {
    "objectID": "tutoriais.html#introdu√ß√£o-ao-python",
    "href": "tutoriais.html#introdu√ß√£o-ao-python",
    "title": "Tutoriais",
    "section": "",
    "text": "Ambiente Jupyter\nLeitura e tratamento de dados com pandas\nGr√°ficos com matplotlib e seaborn"
  },
  {
    "objectID": "posts/anova/index.html",
    "href": "posts/anova/index.html",
    "title": "ANOVA com aov() e emmeans",
    "section": "",
    "text": "1 üìä ANOVA com aov() e emmeans\nVeja como aplicar ANOVA com aov() e realizar compara√ß√µes m√∫ltiplas com emmeans.\n\nlibrary(emmeans)\n\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n\nmodelo &lt;- aov(Sepal.Length ~ Species, data = iris)\nemmeans(modelo, pairwise ~ Species)\n\n$emmeans\n Species    emmean     SE  df lower.CL upper.CL\n setosa       5.01 0.0728 147     4.86     5.15\n versicolor   5.94 0.0728 147     5.79     6.08\n virginica    6.59 0.0728 147     6.44     6.73\n\nConfidence level used: 0.95 \n\n$contrasts\n contrast               estimate    SE  df t.ratio p.value\n setosa - versicolor      -0.930 0.103 147  -9.033  &lt;.0001\n setosa - virginica       -1.582 0.103 147 -15.366  &lt;.0001\n versicolor - virginica   -0.652 0.103 147  -6.333  &lt;.0001\n\nP value adjustment: tukey method for comparing a family of 3 estimates"
  },
  {
    "objectID": "sobre.html",
    "href": "sobre.html",
    "title": "Sobre",
    "section": "",
    "text": "1 ‚ÑπÔ∏è Sobre o ClubeR\nO Clube do C√≥digo do campus da UFPA em Bragan√ßa √© uma iniciativa voltada ao compartilhamento de conhecimento em programa√ß√£o cient√≠fica.\nCoordenado por docentes do Instituto de Estudos Costeiros (IECOS), o ClubeR visa fortalecer a forma√ß√£o t√©cnico-cient√≠fica de estudantes que atuam com bioestat√≠stica, qu√≠mica de alimentos, bioecologia e ci√™ncia de dados.\n\n1.0.1 Contato\nD√∫vidas, sugest√µes ou colabora√ß√µes? Fale conosco:\n\nüìß astuciasnor@gmail.com\nüåê GitHub"
  },
  {
    "objectID": "tutoriais.html#instala√ß√£o-e-configura√ß√£o-do-ambiente",
    "href": "tutoriais.html#instala√ß√£o-e-configura√ß√£o-do-ambiente",
    "title": "Tutoriais",
    "section": "",
    "text": "Instala√ß√£o do R, RStudio e Rtools\nAjustes de Prefer√™ncias da IDE RStudio"
  },
  {
    "objectID": "posts/preferencias-rstudio/index.html",
    "href": "posts/preferencias-rstudio/index.html",
    "title": "Prefer√™ncias do RStudio",
    "section": "",
    "text": "0.1 ‚öôÔ∏è Ajustes essenciais para turbinar sua produtividade no RStudio\nAbaixo, apresento um conjunto enxuto e eficaz de configura√ß√µes que recomendo aplicar √† IDE RStudio, com foco em aumentar sua produtividade, melhorar a leitura do c√≥digo e garantir um ambiente de trabalho mais fluido e confi√°vel.\nUtilize o pacote {rstudio.prefs} para aplicar essas prefer√™ncias de forma automatizada:\n\n# Instale o pacote, se necess√°rio\n# install.packages(\"rstudio.prefs\")\n\nlibrary(rstudio.prefs)\n\nuse_rstudio_prefs(\n  # Editor\n  soft_wrap_r_files = TRUE,\n  show_line_numbers = TRUE,\n  rainbow_parens = TRUE,\n  highlight_selected_line = TRUE,\n  auto_match_parens = TRUE,\n\n  # Workspace\n  load_workspace = FALSE,\n  save_workspace = \"never\",\n\n  # Apar√™ncia\n  editor_theme = \"Tomorrow Night Bright\",  # ou outro com bom contraste e par√™nteses destacados\n\n  # Atualiza√ß√µes e diagn√≥sticos\n  check_for_updates = TRUE,\n  send_crash_reports = TRUE\n)"
  },
  {
    "objectID": "posts/instalacao_r_rtools/index.html",
    "href": "posts/instalacao_r_rtools/index.html",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "",
    "text": "Logomarca da Linguagem R, RStudio, RCommander e Tidyverse"
  },
  {
    "objectID": "posts/instalacao_r_rtools/index.html#introdu√ß√£o",
    "href": "posts/instalacao_r_rtools/index.html#introdu√ß√£o",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "1 Introdu√ß√£o",
    "text": "1 Introdu√ß√£o\nA Linguagem de Programa√ß√£o R √© uma ferramenta essencial para an√°lise de dados e estat√≠stica, sendo amplamente utilizada por cientistas e pesquisadores. Para maximizar sua efic√°cia, √© crucial instalar adequadamente o R, juntamente com a IDE RStudio e o Rtools. O RStudio facilita o desenvolvimento de c√≥digo, enquanto o Rtools auxilia na instala√ß√£o de pacotes, garantindo um ambiente computacional eficiente e livre de bugs. O Rtools √© um conjunto de ferramentas necess√°rias para compilar pacotes R que cont√™m c√≥digos feitos em outras linguagens de programa√ß√£o, como C++ ou Fortran.\n\nR + RStudio: Com essa combina√ß√£o, os usu√°rios desfrutam de um ambiente de desenvolvimento integrado, otimizando a escrita e a execu√ß√£o de c√≥digos R.\nR + Rtools: A instala√ß√£o correta do Rtools permite a constru√ß√£o e instala√ß√£o de pacotes R adicionais, expandindo as possibilidades de an√°lise e melhorando o desempenho do ambiente R."
  },
  {
    "objectID": "posts/instalacao_r_rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "href": "posts/instalacao_r_rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R",
    "text": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R\nA instala√ß√£o da Linguagem de Programa√ß√£o R e de seus pacotes no Sistema Operacional Windows ficou mais f√°cil a partir do lan√ßamento da vers√£o do Rtools42, obtida a partir da p√°gina oficial do R-CRAN, eliminando a necessidade de configurar o path nas vari√°veis de ambiente . Siga os passos a seguir:\n\nBaixe o R e o Rtools da p√°gina oficial do R-CRAN\nBaixe o RStudio da p√°gina oficial.\nCrie uma pasta em C:\\ para instalar o R e o RStudio.\nInstale o R como administrador, clicando com o bot√£o direito do mouse e em seguida selecione a pasta C:\\R\\R-4.5.0 (ou vers√£o mais atualizada) para instala√ß√£o na pasta correta.\n\nEscolha o idioma portugu√™s,\nDesmarque a op√ß√£o de criar atalho e aguarde a conclus√£o da instala√ß√£o.\nAp√≥s instala√ß√£o, acesse a pasta C:\\R\\, clique com o bot√£o direito sobre a subpasta R-4.5.0 e v√° em Propriedades e desmarque a op√ß√£o ‚ÄúSomente Leitura‚Äù e clique Aplicar.\n\nInstale o RStudio como administrador, ajustando a pasta C:\\R\\RStudio para a instala√ß√£o e siga as instru√ß√µes, dando Next nas op√ß√µes.\nAp√≥s instalar o R e RStudio, instale o Rtools (a vers√£o atual √© a Rtools 4.5, em conformidade com as vers√µes do R, ou seja, R-4.5.X), tamb√©m como Administrador e siga as instru√ß√µes na tela, clicando Next ou Ok.\nAp√≥s as instal√ßa√µes dos arquivos execut√°veis, √© o momento de testa se a instala√ß√£o ocorreu adequadamento, tentando instalar pacotes com c√≥digos-fonte que necessitam de compila√ß√£o. Abaixo seguem tr√™s exemplos de instala√ß√£o de pacotes que precisam de compila√ß√£o. Voc√™ n√£o necessariamente desses pacotes, sendo somente a t√≠tulo de verifica√ß√£o de suas instala√ß√µes, as quais se tornariam problem√°ticas se n√£o houver configurado corretamente o Rtools no sistema operacional Windows. Configura√ß√µes para Sistema Linux ou Mac OS seguem outros procedimentos.\n\n\ninstall.packages(\"jsonlite\", type = \"source\")\ninstall.packages(\"psych\", type = \"source\")\ninstall.packages(\"geosphere\", type = \"source\")\nlibrary(jsonlite)\nlibrary(psych)\nlibrary(geosphere)\n\n\nInstale o devtools e o Rcmdr.\n\n\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall.packages(\"Rcmdr\", dependencies = T)\nlibrary(Rcmdr)\n\n\nInstale um pacote do Bioconductor.\n\nAntes de fazer a instala√ß√£o, atualize os pacotes j√° instalados.\n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"EBImage\")\nlibrary(EBImage)\n\n\nInstale o h2o para redes neurais.\n\n\ninstall.packages(\"h2o\")\nlibrary(h2o)\n\n\nInstale o tinytex para criar arquivos pdf com Rmarkdown e Quarto\n\n\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()\n\n\nInstale o conjunto de pacotes tidyverse.\n\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/instalacao_r_rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "href": "posts/instalacao_r_rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "3 Configura√ß√µes em outros sistemas operacionais",
    "text": "3 Configura√ß√µes em outros sistemas operacionais\nO Rtools √© um conjunto de ferramentas projetadas especificamente para o sistema operacional Windows e, portanto, n√£o √© necess√°rio instalar ou configurar o Rtools em um Mac OS ou um Sistema Linux. Em vez disso, no Mac OS, √© necess√°rio instalar o Xcode, um conjunto de ferramentas de desenvolvimento de software da Apple. O Xcode inclui compiladores, ferramentas de depura√ß√£o, bibliotecas e outros recursos que s√£o essenciais para o desenvolvimento de software no Mac OS. Depois de instalar o Xcode, o R pode usar essas ferramentas para compilar pacotes que cont√™m c√≥digo C++ ou Fortran.\nAssim como no Mac OS, no sistema Linux, √© necess√°rio instalar um conjunto de ferramentas de desenvolvimento de software para compilar pacotes R que contenham c√≥digo C++ ou Fortran. A maioria das distribui√ß√µes Linux vem com um conjunto b√°sico de ferramentas de desenvolvimento de software instaladas, incluindo um compilador C/C++, ferramentas de depura√ß√£o e bibliotecas. No entanto, para compilar pacotes R que contenham c√≥digo C++ ou Fortran, pode ser necess√°rio instalar pacotes adicionais.¬†¬†Para instalar as ferramentas de desenvolvimento necess√°rias para compilar pacotes R que cont√™m c√≥digo C++ ou Fortran no Linux, voc√™ deve seguir instru√ß√µes¬†espec√≠ficas de sua distribui√ß√£o. Por exemplo, para Debian/Ubuntu, execute o seguinte comando no terminal:¬†\nsudo apt-get install build-essential. ¬†\n√â importante ressaltar que, dependendo do pacote R que voc√™ deseja compilar, pode ser necess√°rio instalar bibliotecas adicionais e pacotes de desenvolvimento espec√≠ficos para as depend√™ncias do pacote. Em geral, voc√™ deve consultar a documenta√ß√£o do pacote R que deseja compilar para obter instru√ß√µes espec√≠ficas de instala√ß√£o."
  },
  {
    "objectID": "posts/instalacao_r_rtools/index.html#recomenda√ß√µes-finais",
    "href": "posts/instalacao_r_rtools/index.html#recomenda√ß√µes-finais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "4 Recomenda√ß√µes finais",
    "text": "4 Recomenda√ß√µes finais\nAp√≥s a instala√ß√£o bem-sucedida do R, RStudio e Rtools, e a configura√ß√£o de pacotes essenciais, o usu√°rio est√° pronto para mergulhar no mundo da ci√™ncia de dados e an√°lises estat√≠sticas. Com esse ambiente robusto e eficiente, √© poss√≠vel explorar uma ampla gama de t√©cnicas e metodologias. Para iniciantes na Linguagem R, √© recomendado buscar cursos ou tutoriais online para se familiarizar com a sintaxe e as fun√ß√µes b√°sicas da linguagem, al√©m de participar de comunidades e f√≥runs para trocar experi√™ncias e aprender com outros profissionais da √°rea."
  },
  {
    "objectID": "posts/publicando-site-github/index.html#como-publicar-um-site-quarto-no-github-pages",
    "href": "posts/publicando-site-github/index.html#como-publicar-um-site-quarto-no-github-pages",
    "title": "Publicando Site Quarto no Github",
    "section": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages",
    "text": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages\nPublicar um site feito com Quarto usando o GitHub Pages √© uma maneira pr√°tica e gratuita de compartilhar seu conte√∫do online. Abaixo, apresento um passo a passo simples e eficaz para configurar tudo corretamente.\n\n1.1 üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n‚úÖ O Git instalado e configurado no seu sistema\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados\n\n\n\n1.2 üõ†Ô∏è Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù (ou ‚ÄúNovo reposit√≥rio‚Äù).\nEscolha um nome para o seu reposit√≥rio:\n\n\nPara um site ou blog comum:\n\nüëâ meu_website, meu_blog ou outro nome de sua prefer√™ncia\n\nPara uma p√°gina pessoal principal (formato recomendado pelo GitHub):\n\nüëâ nome-de-usuario.github.io\n(substitua nome-de-usuario pelo seu nome real no GitHub, por exemplo: astuciasnor.github.io)\n\n\n\nImportante:\nN√£o marque nenhuma op√ß√£o como ‚ÄúAdd a README file‚Äù, ‚Äú.gitignore‚Äù ou ‚ÄúLICENSE‚Äù neste momento.\nEsses arquivos ser√£o criados e configurados posteriormente, conforme as boas pr√°ticas de versionamento com Quarto.\n\n\n\n1.3 üíª Criar seu website ou blog no RStudio\nEsta etapa pode ser feita antes da cria√ß√£o do repert√≥rio no Github. Por raz√µes de boa pr√°tica de uso do Git, optamos por fazer primerio o reposit√≥rio no Github.\nPara criar seu website ou blog, siga os passos abaixo no RStudio para gerar automaticamente seu projeto Quarto:\n\nV√° at√© o menu: File &gt; New Project &gt; Quarto Website (ou Quarto Blog, se for o caso)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub, para manter a consist√™ncia. Voc√™ pode usar, por exemplo:\n\n\nüëâ meu_website (para um site gen√©rico)\nüëâ meu_blog (para blogs com estrutura de postagens)\nüëâ nome-de-usuario.github.io (para sua p√°gina pessoal principal, substituindo pelo seu nome de usu√°rio real do GitHub ‚Äî ex: astuciasnor.github.io)\n\n\nEscolha o diret√≥rio local onde o projeto ser√° salvo no seu computador.\nClique em Create Project para finalizar a cria√ß√£o.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o.\n\n\n1.4 üîß Ajustar o arquivo _quarto.yml\n\nNo RStudio, localize e abra o arquivo _quarto.yml do seu projeto.\nAdicione a linha output-dir: docs logo abaixo da linha type: website, conforme o exemplo abaixo:\n\n\nproject:\n  type: website\n  output-dir: docs\n\n\nSalve o arquivo (Ctrl + S ou File &gt; Save).\n\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site.\n\n\n1.5 üß™ Renderizar o site localmente\nPara gerar e visualizar seu site Quarto no navegador, voc√™ pode fazer isso de duas formas:\n\nClique no bot√£o ‚ñ∂Ô∏è ‚ÄúRender‚Äù no canto superior direito do RStudio,\nou\nExecute o comando abaixo diretamente no console do RStudio:\n\n\nquarto::quarto_render()\n\nAp√≥s a renderiza√ß√£o:\n\nA p√°gina HTML do seu site ser√° aberta automaticamente no navegador.\nVerifique se a pasta docs/ foi criada na aba Files do RStudio. √â dentro dela que o Quarto salva os arquivos do site que ser√£o enviados ao GitHub.\n\n\n\n1.6 üöÄ Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio.\n\n1.6.1 ‚úÖ Comandos via terminal\nAntes de rodar os comandos abaixo, voc√™ precisa copiar o link do seu reposit√≥rio no GitHub. Para isso:\n\nV√° at√© a p√°gina do seu reposit√≥rio no GitHub.\nClique no bot√£o verde Code (localizado acima da lista de arquivos).\nCopie o link que aparece na aba HTTPS, como no exemplo abaixo:\n\n\nhttps://github.com/seu-usuario/seu-repositorio.git\n\nundefined\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\n\ngit remote add origin\n\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Lembre-se de substituir nome-de-usuario pelo seu usu√°rio real no GitHub, e my_page pelo nome do seu reposit√≥rio.\n\nExecute os comandos abaixo no terminal para preparar e enviar os arquivos ao Github:\n\n\n# Define o nome da branch principal como 'main'\ngit branch -M main\n\n# Adiciona todos os arquivos ao controle de vers√£o\ngit add .\n\n# Cria um commit com uma mensagem\ngit commit -m \"adicionando site\"\n\n# Envia os arquivos para o GitHub\ngit push -u origin main\n\n\n\n1.6.2 üí° Observa√ß√µes importantes\n\nCertifique-se de que o projeto foi inicializado com Git (√≠cone Git no canto superior direito do RStudio).\nSe o projeto j√° foi conectado a um reposit√≥rio remoto, n√£o execute novamente git remote add origin ..., pois isso geraria conflito.\nAp√≥s o git push, os arquivos do seu site estar√£o publicados no GitHub.\n\n\n\n\n1.7 ‚öôÔ∏è Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nAcesse seu reposit√≥rio no GitHub.\nV√° para a aba Settings (Configura√ß√µes) ‚Äî ela fica no canto superior direito do reposit√≥rio.\nNo menu lateral, clique em Pages (ou procure por ‚ÄúPages‚Äù na barra de busca).\nEm Source, configure os seguintes valores:\n\nBranch: main\nFolder: /docs\n\n\n\n\nClique no bot√£o Save.\n\n\n\n1.8 üéâ Pronto!\nüîÑ Ap√≥s alguns segundos, seu site estar√° publicado e acess√≠vel em qualquer navegador. O endere√ßo depende do nome que voc√™ deu ao reposit√≥rio no GitHub:\n\nüîó https://nome-de-usuario.github.io/meu_website\n(quando o nome do reposit√≥rio √© diferente do seu nome de usu√°rio)\n\n\n\nüîó https://nome-de-usuario.github.io/\n(quando o reposit√≥rio se chama nome-de-usuario.github.io)\n\n\nExemplos:\nhttps://astuciasnor.github.io/\nhttps://astuciasnor.github.io/meu_website\n\nParab√©ns! ü•≥ Seu site com Quarto e GitHub Pages j√° est√° no ar.\n\n\n1.9 üìù Editar/adicionar os arquivo .gitignore e LICENSE.md\nComo etapa final, vamos ajustar o arquivo .gitignore e criar a licen√ßa do projeto:\n\n1.9.1 ‚úèÔ∏è Editar o .gitignore:\n\nAcesse o reposit√≥rio no GitHub e localize o arquivo .gitignore.\nClique no nome do arquivo e depois no √≠cone de l√°pis ‚úèÔ∏è para edit√°-lo.\nSubstitua o conte√∫do por um modelo apropriado para projetos em R.\nRemova a linha /docs, se estiver presente (ela impediria a publica√ß√£o do site).\nEscreva uma mensagem de commit explicando a altera√ß√£o e clique em Commit changes.\n\n\n\n1.9.2 üìÑ Adicionar o arquivo de licen√ßa:\n\nNo reposit√≥rio, clique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù.\nNomeie o novo arquivo como: LICENSE.md\nInsira o conte√∫do da licen√ßa desejada (por exemplo, a MIT License, dispon√≠vel como sugest√£o no GitHub).\nClique em Commit new file para salvar.\n\n\n\n1.9.3 üîÑ Atualizar o reposit√≥rio local:\nAp√≥s essas altera√ß√µes, volte ao RStudio e clique no bot√£o Pull na aba Git para sincronizar o reposit√≥rio local com o remoto."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#como-publicar-um-site-quarto-no-github-pages",
    "href": "docs/posts/publicando-site-github/index.html#como-publicar-um-site-quarto-no-github-pages",
    "title": "Publicando Site Quarto no Github",
    "section": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages",
    "text": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages\nPublicar um site feito com Quarto usando o GitHub Pages √© uma maneira pr√°tica e gratuita de compartilhar seu conte√∫do online. Abaixo, apresento um passo a passo simples e eficaz para configurar tudo corretamente. Optamos primeiro por fazer o reposit√≥rio no Github e depois fazer no Rstudio com o mesmo nome, depois criaamos a p√°gina docs para permitir a publica√ß√£o e finalemente edita√ß√£o do arquivo .gitigonore e LICENSE.md\n\n1.1 üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n‚úÖ O Git instalado e configurado no seu sistema\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados\n\n\n\n1.2 üõ†Ô∏è Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù (ou ‚ÄúNovo reposit√≥rio‚Äù).\nEscolha um nome para o seu reposit√≥rio:\n\n\nPara um site ou blog comum:\n\nüëâ meu_website, meu_blog ou outro nome de sua prefer√™ncia\n\nPara uma p√°gina pessoal principal (formato recomendado pelo GitHub):\n\nüëâ nome-de-usuario.github.io\n(substitua nome-de-usuario pelo seu nome real no GitHub, por exemplo: astuciasnor.github.io)\n\n\n\nImportante:\nN√£o marque nenhuma op√ß√£o como ‚ÄúAdd a README file‚Äù, ‚Äú.gitignore‚Äù ou ‚ÄúLICENSE‚Äù neste momento.\nEsses arquivos ser√£o criados e configurados posteriormente, conforme as boas pr√°ticas de versionamento com Quarto.\n\n\n\n1.3 üíª Criar seu website ou blog no RStudio\nEsta etapa pode ser feita antes da cria√ß√£o do repert√≥rio no Github. Por raz√µes de boa pr√°tica de uso do Git, optamos por fazer primerio o reposit√≥rio no Github.\nPara criar seu website ou blog, siga os passos abaixo no RStudio para gerar automaticamente seu projeto Quarto:\n\nV√° at√© o menu: File &gt; New Project &gt; Quarto Website (ou Quarto Blog, se for o caso)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub, para manter a consist√™ncia. Voc√™ pode usar, por exemplo:\n\n\nüëâ meu_website (para um site gen√©rico)\nüëâ meu_blog (para blogs com estrutura de postagens)\nüëâ nome-de-usuario.github.io (para sua p√°gina pessoal principal, substituindo pelo seu nome de usu√°rio real do GitHub ‚Äî ex: astuciasnor.github.io)\n\n\nEscolha o diret√≥rio local onde o projeto ser√° salvo no seu computador.\nClique em Create Project para finalizar a cria√ß√£o.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o.\n\n\n1.4 üîß Ajustar o arquivo _quarto.yml\n\nNo RStudio, localize e abra o arquivo _quarto.yml do seu projeto.\nAdicione a linha output-dir: docs logo abaixo da linha type: website, conforme o exemplo abaixo:\n\n\nproject:\n  type: website\n  output-dir: docs\n\n\nSalve o arquivo (Ctrl + S ou File &gt; Save).\n\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site e n√£o a pasta _sites.\n\n\n1.5 üß™ Renderizar o site localmente\nPara gerar e visualizar seu site Quarto no navegador, voc√™ pode fazer isso de duas formas:\n\nClique no bot√£o ‚ñ∂Ô∏è ‚ÄúRender‚Äù no canto superior direito do RStudio,\nou\nExecute o comando abaixo diretamente no console do RStudio:\n\n\nquarto::quarto_render()\n\nAp√≥s a renderiza√ß√£o:\n\nA p√°gina HTML do seu site ser√° aberta automaticamente no navegador.\nVerifique se a pasta docs/ foi criada na aba Files do RStudio. √â dentro dela que o Quarto salva os arquivos do site que ser√£o enviados ao GitHub.\n\n\n\n1.6 üöÄ Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio.\n\n1.6.1 ‚úÖ Comandos via terminal\nAntes de rodar os comandos abaixo, voc√™ precisa copiar o link do seu reposit√≥rio no GitHub. Para isso:\n\nV√° at√© a p√°gina do seu reposit√≥rio no GitHub.\nClique no bot√£o verde Code (localizado acima da lista de arquivos).\nCopie o link que aparece na aba HTTPS, como no exemplo abaixo:\n\n\nhttps://github.com/seu-usuario/seu-repositorio.git\n\nundefined\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\n\ngit remote add origin\n\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Lembre-se de substituir nome-de-usuario pelo seu usu√°rio real no GitHub, e my_page pelo nome do seu reposit√≥rio.\n\nExecute os comandos abaixo no terminal para preparar e enviar os arquivos ao Github:\n\n\n# Define o nome da branch principal como 'main'\ngit branch -M main\n\n# Adiciona todos os arquivos ao controle de vers√£o\ngit add .\n\n# Cria um commit com uma mensagem\ngit commit -m \"adicionando site\"\n\n# Envia os arquivos para o GitHub\ngit push -u origin main\n\n\n\n1.6.2 üí° Observa√ß√µes importantes\n\nCertifique-se de que o projeto foi inicializado com Git (√≠cone Git no canto superior direito do RStudio).\nSe o projeto j√° foi conectado a um reposit√≥rio remoto, n√£o execute novamente git remote add origin ..., pois isso geraria conflito.\nAp√≥s o git push, os arquivos do seu site estar√£o publicados no GitHub.\n\n\n\n\n1.7 ‚öôÔ∏è Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nAcesse seu reposit√≥rio no GitHub.\nV√° para a aba Settings (Configura√ß√µes) ‚Äî ela fica no canto superior direito do reposit√≥rio.\nNo menu lateral, clique em Pages (ou procure por ‚ÄúPages‚Äù na barra de busca).\nEm Source, configure os seguintes valores:\n\nBranch: main\nFolder: /docs\n\n\n\n\nClique no bot√£o Save.\n\n\n\n1.8 üéâ Pronto!\nüîÑ Ap√≥s alguns segundos, seu site estar√° publicado e acess√≠vel em qualquer navegador. O endere√ßo depende do nome que voc√™ deu ao reposit√≥rio no GitHub:\n\nüîó https://nome-de-usuario.github.io/meu_website\n(quando o nome do reposit√≥rio √© diferente do seu nome de usu√°rio)\n\n\n\nüîó https://nome-de-usuario.github.io/\n(quando o reposit√≥rio se chama nome-de-usuario.github.io)\n\n\nExemplos:\nhttps://astuciasnor.github.io/\nhttps://astuciasnor.github.io/meu_website\n\nParab√©ns! ü•≥ Seu site com Quarto e GitHub Pages j√° est√° no ar.\n\n\n1.9 üìù Editar/adicionar os arquivo .gitignore e LICENSE.md\nComo etapa final, vamos ajustar o arquivo .gitignore e criar a licen√ßa do projeto:\n\n1.9.1 ‚úèÔ∏è Editar o .gitignore:\n\nAcesse o reposit√≥rio no GitHub e localize o arquivo .gitignore.\nClique no nome do arquivo e depois no √≠cone de l√°pis ‚úèÔ∏è para edit√°-lo.\nSubstitua o conte√∫do por um modelo apropriado para projetos em R.\nRemova a linha /docs, se estiver presente (ela impediria a publica√ß√£o do site).\nEscreva uma mensagem de commit explicando a altera√ß√£o e clique em Commit changes.\n\n\n\n1.9.2 üìÑ Adicionar o arquivo de licen√ßa:\n\nNo reposit√≥rio, clique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù.\nNomeie o novo arquivo como: LICENSE.md\nInsira o conte√∫do da licen√ßa desejada (por exemplo, a MIT License, dispon√≠vel como sugest√£o no GitHub).\nClique em Commit new file para salvar.\n\n\n\n1.9.3 üîÑ Atualizar o reposit√≥rio local:\nAp√≥s essas altera√ß√µes, volte ao RStudio e clique no bot√£o Pull na aba Git para sincronizar o reposit√≥rio local com o remoto."
  },
  {
    "objectID": "docs/posts/instalacao_r_rtools/index.html",
    "href": "docs/posts/instalacao_r_rtools/index.html",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "",
    "text": "Logomarca da Linguagem R, RStudio, RCommander e Tidyverse"
  },
  {
    "objectID": "docs/posts/instalacao_r_rtools/index.html#introdu√ß√£o",
    "href": "docs/posts/instalacao_r_rtools/index.html#introdu√ß√£o",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "1 Introdu√ß√£o",
    "text": "1 Introdu√ß√£o\nA Linguagem de Programa√ß√£o R √© uma ferramenta essencial para an√°lise de dados e estat√≠stica, sendo amplamente utilizada por cientistas e pesquisadores. Para maximizar sua efic√°cia, √© crucial instalar adequadamente o R, juntamente com a IDE RStudio e o Rtools. O RStudio facilita o desenvolvimento de c√≥digo, enquanto o Rtools auxilia na instala√ß√£o de pacotes, garantindo um ambiente computacional eficiente e livre de bugs. O Rtools √© um conjunto de ferramentas necess√°rias para compilar pacotes R que cont√™m c√≥digos feitos em outras linguagens de programa√ß√£o, como C++ ou Fortran.\n\nR + RStudio: Com essa combina√ß√£o, os usu√°rios desfrutam de um ambiente de desenvolvimento integrado, otimizando a escrita e a execu√ß√£o de c√≥digos R.\nR + Rtools: A instala√ß√£o correta do Rtools permite a constru√ß√£o e instala√ß√£o de pacotes R adicionais, expandindo as possibilidades de an√°lise e melhorando o desempenho do ambiente R."
  },
  {
    "objectID": "docs/posts/instalacao_r_rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "href": "docs/posts/instalacao_r_rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R",
    "text": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R\nA instala√ß√£o da Linguagem de Programa√ß√£o R e de seus pacotes no Sistema Operacional Windows ficou mais f√°cil a partir do lan√ßamento da vers√£o do Rtools42, obtida a partir da p√°gina oficial do R-CRAN, eliminando a necessidade de configurar o path nas vari√°veis de ambiente . Siga os passos a seguir:\n\nBaixe o R e o Rtools da p√°gina oficial do R-CRAN\nBaixe o RStudio da p√°gina oficial.\nCrie uma pasta em C:\\ para instalar o R e o RStudio.\nInstale o R como administrador, clicando com o bot√£o direito do mouse e em seguida selecione a pasta C:\\R\\R-4.5.0 (ou vers√£o mais atualizada) para instala√ß√£o na pasta correta.\n\nEscolha o idioma portugu√™s,\nDesmarque a op√ß√£o de criar atalho e aguarde a conclus√£o da instala√ß√£o.\nAp√≥s instala√ß√£o, acesse a pasta C:\\R\\, clique com o bot√£o direito sobre a subpasta R-4.5.0 e v√° em Propriedades e desmarque a op√ß√£o ‚ÄúSomente Leitura‚Äù e clique Aplicar.\n\nInstale o RStudio como administrador, ajustando a pasta C:\\R\\RStudio para a instala√ß√£o e siga as instru√ß√µes, dando Next nas op√ß√µes.\nAp√≥s instalar o R e RStudio, instale o Rtools (a vers√£o atual √© a Rtools 4.5, em conformidade com as vers√µes do R, ou seja, R-4.5.X), tamb√©m como Administrador e siga as instru√ß√µes na tela, clicando Next ou Ok.\nAp√≥s as instal√ßa√µes dos arquivos execut√°veis, √© o momento de testa se a instala√ß√£o ocorreu adequadamento, tentando instalar pacotes com c√≥digos-fonte que necessitam de compila√ß√£o. Abaixo seguem tr√™s exemplos de instala√ß√£o de pacotes que precisam de compila√ß√£o. Voc√™ n√£o necessariamente desses pacotes, sendo somente a t√≠tulo de verifica√ß√£o de suas instala√ß√µes, as quais se tornariam problem√°ticas se n√£o houver configurado corretamente o Rtools no sistema operacional Windows. Configura√ß√µes para Sistema Linux ou Mac OS seguem outros procedimentos.\n\n\ninstall.packages(\"jsonlite\", type = \"source\")\ninstall.packages(\"psych\", type = \"source\")\ninstall.packages(\"geosphere\", type = \"source\")\nlibrary(jsonlite)\nlibrary(psych)\nlibrary(geosphere)\n\n\nInstale o devtools e o Rcmdr.\n\n\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall.packages(\"Rcmdr\", dependencies = T)\nlibrary(Rcmdr)\n\n\nInstale um pacote do Bioconductor.\n\nAntes de fazer a instala√ß√£o, atualize os pacotes j√° instalados.\n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"EBImage\")\nlibrary(EBImage)\n\n\nInstale o h2o para redes neurais.\n\n\ninstall.packages(\"h2o\")\nlibrary(h2o)\n\n\nInstale o tinytex para criar arquivos pdf com Rmarkdown e Quarto\n\n\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()\n\n\nInstale o conjunto de pacotes tidyverse.\n\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "docs/posts/instalacao_r_rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "href": "docs/posts/instalacao_r_rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "3 Configura√ß√µes em outros sistemas operacionais",
    "text": "3 Configura√ß√µes em outros sistemas operacionais\nO Rtools √© um conjunto de ferramentas projetadas especificamente para o sistema operacional Windows e, portanto, n√£o √© necess√°rio instalar ou configurar o Rtools em um Mac OS ou um Sistema Linux. Em vez disso, no Mac OS, √© necess√°rio instalar o Xcode, um conjunto de ferramentas de desenvolvimento de software da Apple. O Xcode inclui compiladores, ferramentas de depura√ß√£o, bibliotecas e outros recursos que s√£o essenciais para o desenvolvimento de software no Mac OS. Depois de instalar o Xcode, o R pode usar essas ferramentas para compilar pacotes que cont√™m c√≥digo C++ ou Fortran.\nAssim como no Mac OS, no sistema Linux, √© necess√°rio instalar um conjunto de ferramentas de desenvolvimento de software para compilar pacotes R que contenham c√≥digo C++ ou Fortran. A maioria das distribui√ß√µes Linux vem com um conjunto b√°sico de ferramentas de desenvolvimento de software instaladas, incluindo um compilador C/C++, ferramentas de depura√ß√£o e bibliotecas. No entanto, para compilar pacotes R que contenham c√≥digo C++ ou Fortran, pode ser necess√°rio instalar pacotes adicionais.¬†¬†Para instalar as ferramentas de desenvolvimento necess√°rias para compilar pacotes R que cont√™m c√≥digo C++ ou Fortran no Linux, voc√™ deve seguir instru√ß√µes¬†espec√≠ficas de sua distribui√ß√£o. Por exemplo, para Debian/Ubuntu, execute o seguinte comando no terminal:¬†\nsudo apt-get install build-essential. ¬†\n√â importante ressaltar que, dependendo do pacote R que voc√™ deseja compilar, pode ser necess√°rio instalar bibliotecas adicionais e pacotes de desenvolvimento espec√≠ficos para as depend√™ncias do pacote. Em geral, voc√™ deve consultar a documenta√ß√£o do pacote R que deseja compilar para obter instru√ß√µes espec√≠ficas de instala√ß√£o."
  },
  {
    "objectID": "docs/posts/instalacao_r_rtools/index.html#recomenda√ß√µes-finais",
    "href": "docs/posts/instalacao_r_rtools/index.html#recomenda√ß√µes-finais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "4 Recomenda√ß√µes finais",
    "text": "4 Recomenda√ß√µes finais\nAp√≥s a instala√ß√£o bem-sucedida do R, RStudio e Rtools, e a configura√ß√£o de pacotes essenciais, o usu√°rio est√° pronto para mergulhar no mundo da ci√™ncia de dados e an√°lises estat√≠sticas. Com esse ambiente robusto e eficiente, √© poss√≠vel explorar uma ampla gama de t√©cnicas e metodologias. Para iniciantes na Linguagem R, √© recomendado buscar cursos ou tutoriais online para se familiarizar com a sintaxe e as fun√ß√µes b√°sicas da linguagem, al√©m de participar de comunidades e f√≥runs para trocar experi√™ncias e aprender com outros profissionais da √°rea."
  },
  {
    "objectID": "docs/posts/preferencias-rstudio/index.html",
    "href": "docs/posts/preferencias-rstudio/index.html",
    "title": "Prefer√™ncias do RStudio",
    "section": "",
    "text": "0.1 ‚öôÔ∏è Ajustes essenciais para turbinar sua produtividade no RStudio\nAbaixo, apresento um conjunto enxuto e eficaz de configura√ß√µes que recomendo aplicar √† IDE RStudio, com foco em aumentar sua produtividade, melhorar a leitura do c√≥digo e garantir um ambiente de trabalho mais fluido e confi√°vel.\nUtilize o pacote {rstudio.prefs} para aplicar essas prefer√™ncias de forma automatizada:\n\n# Instale o pacote, se necess√°rio\n# install.packages(\"rstudio.prefs\")\n\nlibrary(rstudio.prefs)\n\nuse_rstudio_prefs(\n  # Editor\n  soft_wrap_r_files = TRUE,\n  show_line_numbers = TRUE,\n  rainbow_parens = TRUE,\n  highlight_selected_line = TRUE,\n  auto_match_parens = TRUE,\n\n  # Workspace\n  load_workspace = FALSE,\n  save_workspace = \"never\",\n\n  # Apar√™ncia\n  editor_theme = \"Tomorrow Night Bright\",  # ou outro com bom contraste e par√™nteses destacados\n\n  # Atualiza√ß√µes e diagn√≥sticos\n  check_for_updates = TRUE,\n  send_crash_reports = TRUE\n)"
  },
  {
    "objectID": "posts/instalacao-r-rtools/index.html",
    "href": "posts/instalacao-r-rtools/index.html",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "",
    "text": "Logomarca da Linguagem R, RStudio, RCommander e Tidyverse"
  },
  {
    "objectID": "posts/instalacao-r-rtools/index.html#introdu√ß√£o",
    "href": "posts/instalacao-r-rtools/index.html#introdu√ß√£o",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "1 Introdu√ß√£o",
    "text": "1 Introdu√ß√£o\nA Linguagem de Programa√ß√£o R √© uma ferramenta essencial para an√°lise de dados e estat√≠stica, sendo amplamente utilizada por cientistas e pesquisadores. Para maximizar sua efic√°cia, √© crucial instalar adequadamente o R, juntamente com a IDE RStudio e o Rtools. O RStudio facilita o desenvolvimento de c√≥digo, enquanto o Rtools auxilia na instala√ß√£o de pacotes, garantindo um ambiente computacional eficiente e livre de bugs. O Rtools √© um conjunto de ferramentas necess√°rias para compilar pacotes R que cont√™m c√≥digos feitos em outras linguagens de programa√ß√£o, como C++ ou Fortran.\n\nR + RStudio: Com essa combina√ß√£o, os usu√°rios desfrutam de um ambiente de desenvolvimento integrado, otimizando a escrita e a execu√ß√£o de c√≥digos R.\nR + Rtools: A instala√ß√£o correta do Rtools permite a constru√ß√£o e instala√ß√£o de pacotes R adicionais, expandindo as possibilidades de an√°lise e melhorando o desempenho do ambiente R."
  },
  {
    "objectID": "posts/instalacao-r-rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "href": "posts/instalacao-r-rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R",
    "text": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R\nA instala√ß√£o da Linguagem de Programa√ß√£o R e de seus pacotes no Sistema Operacional Windows ficou mais f√°cil a partir do lan√ßamento da vers√£o do Rtools42, obtida a partir da p√°gina oficial do R-CRAN, eliminando a necessidade de configurar o path nas vari√°veis de ambiente . Siga os passos abaixo e, caso necess√°rio, assista este video video no youtube:\n\nBaixe o R e o Rtools da p√°gina oficial do R-CRAN.\nBaixe o RStudio da p√°gina oficial.\nCrie uma pasta em C:\\ para instalar o R e o RStudio.\nInstale o R como administrador, clicando com o bot√£o direito do mouse e em seguida selecione a pasta C:\\R\\R-4.5.0 (ou vers√£o mais atualizada) para instala√ß√£o na pasta correta.\n\nEscolha o idioma portugu√™s,\nDesmarque a op√ß√£o de criar atalho e aguarde a conclus√£o da instala√ß√£o.\nAp√≥s instala√ß√£o, acesse a pasta C:\\R\\, clique com o bot√£o direito sobre a subpasta R-4.5.0 e v√° em Propriedades e desmarque a op√ß√£o ‚ÄúSomente Leitura‚Äù e clique Aplicar.\n\nInstale o RStudio como administrador, ajustando a pasta C:\\R\\RStudio para a instala√ß√£o e siga as instru√ß√µes, dando Next nas op√ß√µes.\nAp√≥s instalar o R e RStudio, instale o Rtools (a vers√£o atual √© a Rtools 4.5, em conformidade com as vers√µes do R, ou seja, R-4.5.X), tamb√©m como Administrador e siga as instru√ß√µes na tela, clicando Next ou Ok.\nAp√≥s as instal√ßa√µes dos arquivos execut√°veis, √© o momento de testa se a instala√ß√£o ocorreu adequadamento, tentando instalar pacotes com c√≥digos-fonte que necessitam de compila√ß√£o. Abaixo seguem tr√™s exemplos de instala√ß√£o de pacotes que precisam de compila√ß√£o. Voc√™ n√£o necessariamente desses pacotes, sendo somente a t√≠tulo de verifica√ß√£o de suas instala√ß√µes, as quais se tornariam problem√°ticas se n√£o houver configurado corretamente o Rtools no sistema operacional Windows. Configura√ß√µes para Sistema Linux ou Mac OS seguem outros procedimentos.\n\n\ninstall.packages(\"jsonlite\", type = \"source\")\ninstall.packages(\"psych\", type = \"source\")\ninstall.packages(\"geosphere\", type = \"source\")\nlibrary(jsonlite)\nlibrary(psych)\nlibrary(geosphere)\n\n\nInstale o devtools e o Rcmdr.\n\n\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall.packages(\"Rcmdr\", dependencies = T)\nlibrary(Rcmdr)\n\n\nInstale um pacote do Bioconductor.\n\nAntes de fazer a instala√ß√£o, atualize os pacotes j√° instalados.\n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"EBImage\")\nlibrary(EBImage)\n\n\nInstale o h2o para redes neurais.\n\n\ninstall.packages(\"h2o\")\nlibrary(h2o)\n\n\nInstale o tinytex para criar arquivos pdf com Rmarkdown e Quarto\n\n\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()\n\n\nInstale o conjunto de pacotes tidyverse.\n\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/instalacao-r-rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "href": "posts/instalacao-r-rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "3 Configura√ß√µes em outros sistemas operacionais",
    "text": "3 Configura√ß√µes em outros sistemas operacionais\nO Rtools √© um conjunto de ferramentas projetadas especificamente para o sistema operacional Windows e, portanto, n√£o √© necess√°rio instalar ou configurar o Rtools em um Mac OS ou um Sistema Linux. Em vez disso, no Mac OS, √© necess√°rio instalar o Xcode, um conjunto de ferramentas de desenvolvimento de software da Apple. O Xcode inclui compiladores, ferramentas de depura√ß√£o, bibliotecas e outros recursos que s√£o essenciais para o desenvolvimento de software no Mac OS. Depois de instalar o Xcode, o R pode usar essas ferramentas para compilar pacotes que cont√™m c√≥digo C++ ou Fortran.\nAssim como no Mac OS, no sistema Linux, √© necess√°rio instalar um conjunto de ferramentas de desenvolvimento de software para compilar pacotes R que contenham c√≥digo C++ ou Fortran. A maioria das distribui√ß√µes Linux vem com um conjunto b√°sico de ferramentas de desenvolvimento de software instaladas, incluindo um compilador C/C++, ferramentas de depura√ß√£o e bibliotecas. No entanto, para compilar pacotes R que contenham c√≥digo C++ ou Fortran, pode ser necess√°rio instalar pacotes adicionais.¬†¬†Para instalar as ferramentas de desenvolvimento necess√°rias para compilar pacotes R que cont√™m c√≥digo C++ ou Fortran no Linux, voc√™ deve seguir instru√ß√µes¬†espec√≠ficas de sua distribui√ß√£o. Por exemplo, para Debian/Ubuntu, execute o seguinte comando no terminal:¬†\nsudo apt-get install build-essential. ¬†\n√â importante ressaltar que, dependendo do pacote R que voc√™ deseja compilar, pode ser necess√°rio instalar bibliotecas adicionais e pacotes de desenvolvimento espec√≠ficos para as depend√™ncias do pacote. Em geral, voc√™ deve consultar a documenta√ß√£o do pacote R que deseja compilar para obter instru√ß√µes espec√≠ficas de instala√ß√£o."
  },
  {
    "objectID": "posts/instalacao-r-rtools/index.html#recomenda√ß√µes-finais",
    "href": "posts/instalacao-r-rtools/index.html#recomenda√ß√µes-finais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "4 Recomenda√ß√µes finais",
    "text": "4 Recomenda√ß√µes finais\nAp√≥s a instala√ß√£o bem-sucedida do R, RStudio e Rtools, e a configura√ß√£o de pacotes essenciais, o usu√°rio est√° pronto para mergulhar no mundo da ci√™ncia de dados e an√°lises estat√≠sticas. Com esse ambiente robusto e eficiente, √© poss√≠vel explorar uma ampla gama de t√©cnicas e metodologias. Para iniciantes na Linguagem R, √© recomendado buscar cursos ou tutoriais online para se familiarizar com a sintaxe e as fun√ß√µes b√°sicas da linguagem, al√©m de participar de comunidades e f√≥runs para trocar experi√™ncias e aprender com outros profissionais da √°rea."
  },
  {
    "objectID": "tutoriais.html#cria√ß√£o-de-websites-e-blogs",
    "href": "tutoriais.html#cria√ß√£o-de-websites-e-blogs",
    "title": "Tutoriais",
    "section": "",
    "text": "Publicando site pessoal ou Blog no Github"
  },
  {
    "objectID": "docs/posts/instalacao-r-rtools/index.html",
    "href": "docs/posts/instalacao-r-rtools/index.html",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "",
    "text": "Logomarca da Linguagem R, RStudio, RCommander e Tidyverse"
  },
  {
    "objectID": "docs/posts/instalacao-r-rtools/index.html#introdu√ß√£o",
    "href": "docs/posts/instalacao-r-rtools/index.html#introdu√ß√£o",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "1 Introdu√ß√£o",
    "text": "1 Introdu√ß√£o\nA Linguagem de Programa√ß√£o R √© uma ferramenta essencial para an√°lise de dados e estat√≠stica, sendo amplamente utilizada por cientistas e pesquisadores. Para maximizar sua efic√°cia, √© crucial instalar adequadamente o R, juntamente com a IDE RStudio e o Rtools. O RStudio facilita o desenvolvimento de c√≥digo, enquanto o Rtools auxilia na instala√ß√£o de pacotes, garantindo um ambiente computacional eficiente e livre de bugs. O Rtools √© um conjunto de ferramentas necess√°rias para compilar pacotes R que cont√™m c√≥digos feitos em outras linguagens de programa√ß√£o, como C++ ou Fortran.\n\nR + RStudio: Com essa combina√ß√£o, os usu√°rios desfrutam de um ambiente de desenvolvimento integrado, otimizando a escrita e a execu√ß√£o de c√≥digos R.\nR + Rtools: A instala√ß√£o correta do Rtools permite a constru√ß√£o e instala√ß√£o de pacotes R adicionais, expandindo as possibilidades de an√°lise e melhorando o desempenho do ambiente R."
  },
  {
    "objectID": "docs/posts/instalacao-r-rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "href": "docs/posts/instalacao-r-rtools/index.html#procedimentos-de-instala√ß√£o-e-configura√ß√£o-do-r",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R",
    "text": "2 Procedimentos de Instala√ß√£o e configura√ß√£o do R\nA instala√ß√£o da Linguagem de Programa√ß√£o R e de seus pacotes no Sistema Operacional Windows ficou mais f√°cil a partir do lan√ßamento da vers√£o do Rtools42, obtida a partir da p√°gina oficial do R-CRAN, eliminando a necessidade de configurar o path nas vari√°veis de ambiente . Siga os passos abaixo e, caso necess√°rio, assista este video video no youtube:\n\nBaixe o R e o Rtools da p√°gina oficial do R-CRAN.\nBaixe o RStudio da p√°gina oficial.\nCrie uma pasta em C:\\ para instalar o R e o RStudio.\nInstale o R como administrador, clicando com o bot√£o direito do mouse e em seguida selecione a pasta C:\\R\\R-4.5.0 (ou vers√£o mais atualizada) para instala√ß√£o na pasta correta.\n\nEscolha o idioma portugu√™s,\nDesmarque a op√ß√£o de criar atalho e aguarde a conclus√£o da instala√ß√£o.\nAp√≥s instala√ß√£o, acesse a pasta C:\\R\\, clique com o bot√£o direito sobre a subpasta R-4.5.0 e v√° em Propriedades e desmarque a op√ß√£o ‚ÄúSomente Leitura‚Äù e clique Aplicar.\n\nInstale o RStudio como administrador, ajustando a pasta C:\\R\\RStudio para a instala√ß√£o e siga as instru√ß√µes, dando Next nas op√ß√µes.\nAp√≥s instalar o R e RStudio, instale o Rtools (a vers√£o atual √© a Rtools 4.5, em conformidade com as vers√µes do R, ou seja, R-4.5.X), tamb√©m como Administrador e siga as instru√ß√µes na tela, clicando Next ou Ok.\nAp√≥s as instal√ßa√µes dos arquivos execut√°veis, √© o momento de testa se a instala√ß√£o ocorreu adequadamento, tentando instalar pacotes com c√≥digos-fonte que necessitam de compila√ß√£o. Abaixo seguem tr√™s exemplos de instala√ß√£o de pacotes que precisam de compila√ß√£o. Voc√™ n√£o necessariamente desses pacotes, sendo somente a t√≠tulo de verifica√ß√£o de suas instala√ß√µes, as quais se tornariam problem√°ticas se n√£o houver configurado corretamente o Rtools no sistema operacional Windows. Configura√ß√µes para Sistema Linux ou Mac OS seguem outros procedimentos.\n\n\ninstall.packages(\"jsonlite\", type = \"source\")\ninstall.packages(\"psych\", type = \"source\")\ninstall.packages(\"geosphere\", type = \"source\")\nlibrary(jsonlite)\nlibrary(psych)\nlibrary(geosphere)\n\n\nInstale o devtools e o Rcmdr.\n\n\ninstall.packages(\"devtools\")\nlibrary(devtools)\ninstall.packages(\"Rcmdr\", dependencies = T)\nlibrary(Rcmdr)\n\n\nInstale um pacote do Bioconductor.\n\nAntes de fazer a instala√ß√£o, atualize os pacotes j√° instalados.\n\nif (!require(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"EBImage\")\nlibrary(EBImage)\n\n\nInstale o h2o para redes neurais.\n\n\ninstall.packages(\"h2o\")\nlibrary(h2o)\n\n\nInstale o tinytex para criar arquivos pdf com Rmarkdown e Quarto\n\n\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()\n\n\nInstale o conjunto de pacotes tidyverse.\n\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "docs/posts/instalacao-r-rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "href": "docs/posts/instalacao-r-rtools/index.html#configura√ß√µes-em-outros-sistemas-operacionais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "3 Configura√ß√µes em outros sistemas operacionais",
    "text": "3 Configura√ß√µes em outros sistemas operacionais\nO Rtools √© um conjunto de ferramentas projetadas especificamente para o sistema operacional Windows e, portanto, n√£o √© necess√°rio instalar ou configurar o Rtools em um Mac OS ou um Sistema Linux. Em vez disso, no Mac OS, √© necess√°rio instalar o Xcode, um conjunto de ferramentas de desenvolvimento de software da Apple. O Xcode inclui compiladores, ferramentas de depura√ß√£o, bibliotecas e outros recursos que s√£o essenciais para o desenvolvimento de software no Mac OS. Depois de instalar o Xcode, o R pode usar essas ferramentas para compilar pacotes que cont√™m c√≥digo C++ ou Fortran.\nAssim como no Mac OS, no sistema Linux, √© necess√°rio instalar um conjunto de ferramentas de desenvolvimento de software para compilar pacotes R que contenham c√≥digo C++ ou Fortran. A maioria das distribui√ß√µes Linux vem com um conjunto b√°sico de ferramentas de desenvolvimento de software instaladas, incluindo um compilador C/C++, ferramentas de depura√ß√£o e bibliotecas. No entanto, para compilar pacotes R que contenham c√≥digo C++ ou Fortran, pode ser necess√°rio instalar pacotes adicionais.¬†¬†Para instalar as ferramentas de desenvolvimento necess√°rias para compilar pacotes R que cont√™m c√≥digo C++ ou Fortran no Linux, voc√™ deve seguir instru√ß√µes¬†espec√≠ficas de sua distribui√ß√£o. Por exemplo, para Debian/Ubuntu, execute o seguinte comando no terminal:¬†\nsudo apt-get install build-essential. ¬†\n√â importante ressaltar que, dependendo do pacote R que voc√™ deseja compilar, pode ser necess√°rio instalar bibliotecas adicionais e pacotes de desenvolvimento espec√≠ficos para as depend√™ncias do pacote. Em geral, voc√™ deve consultar a documenta√ß√£o do pacote R que deseja compilar para obter instru√ß√µes espec√≠ficas de instala√ß√£o."
  },
  {
    "objectID": "docs/posts/instalacao-r-rtools/index.html#recomenda√ß√µes-finais",
    "href": "docs/posts/instalacao-r-rtools/index.html#recomenda√ß√µes-finais",
    "title": "Instalando o R, RStudio e Rtools",
    "section": "4 Recomenda√ß√µes finais",
    "text": "4 Recomenda√ß√µes finais\nAp√≥s a instala√ß√£o bem-sucedida do R, RStudio e Rtools, e a configura√ß√£o de pacotes essenciais, o usu√°rio est√° pronto para mergulhar no mundo da ci√™ncia de dados e an√°lises estat√≠sticas. Com esse ambiente robusto e eficiente, √© poss√≠vel explorar uma ampla gama de t√©cnicas e metodologias. Para iniciantes na Linguagem R, √© recomendado buscar cursos ou tutoriais online para se familiarizar com a sintaxe e as fun√ß√µes b√°sicas da linguagem, al√©m de participar de comunidades e f√≥runs para trocar experi√™ncias e aprender com outros profissionais da √°rea."
  },
  {
    "objectID": "posts/publicando-site-github/index.html",
    "href": "posts/publicando-site-github/index.html",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "",
    "text": "Publicar um site com Quarto via GitHub Pages √© uma forma simples e gratuita de compartilhar seu conte√∫do online. Neste guia, seguimos um fluxo pr√°tico: criamos primeiro o reposit√≥rio no GitHub, depois o projeto no RStudio com o mesmo nome, configuramos a pasta docs para publica√ß√£o, e finalizamos com ajustes nos arquivos .gitignore e LICENSE.md."
  },
  {
    "objectID": "posts/publicando-site-github/index.html#pr√©-requisitos",
    "href": "posts/publicando-site-github/index.html#pr√©-requisitos",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üåê Pr√©-requisitos",
    "text": "üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n\n‚úÖ O Git instalado e configurado no seu sistema\n\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados"
  },
  {
    "objectID": "posts/publicando-site-github/index.html#criar-o-reposit√≥rio-no-github",
    "href": "posts/publicando-site-github/index.html#criar-o-reposit√≥rio-no-github",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üõ†Ô∏è 1. Criar o reposit√≥rio no GitHub",
    "text": "üõ†Ô∏è 1. Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù.\n\nD√™ ao reposit√≥rio um dos seguintes nomes:\n\nüëâ meu_website, meu_blog ou outro nome livre\nüëâ nome-de-usuario.github.io (para uma p√°gina pessoal principal ‚Äî substitua pelo seu nome de usu√°rio real do GitHub)\n\nN√£o marque op√ß√µes como README, .gitignore ou LICENSE. Esses arquivos ser√£o criados depois."
  },
  {
    "objectID": "posts/publicando-site-github/index.html#criar-seu-website-ou-blog-no-rstudio",
    "href": "posts/publicando-site-github/index.html#criar-seu-website-ou-blog-no-rstudio",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üíª 2. Criar seu website ou blog no RStudio",
    "text": "üíª 2. Criar seu website ou blog no RStudio\nEmbora seja poss√≠vel iniciar o projeto diretamente no RStudio, optamos por criar primeiro o reposit√≥rio no GitHub. Essa ordem segue boas pr√°ticas de versionamento, facilitando a integra√ß√£o entre o reposit√≥rio remoto e o projeto local desde o in√≠cio.\n\nV√° at√©: File &gt; New Project &gt; New Directory &gt; Quarto Website (ou Quarto Blog)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub:\n\nmeu_website, meu_blog, ou nome-de-usuario.github.io\n\nEscolha o diret√≥rio onde o projeto ser√° salvo.\nClique em Create a git repository.\nClique em Create Project.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o."
  },
  {
    "objectID": "posts/publicando-site-github/index.html#ajustar-o-arquivo-_quarto.yml",
    "href": "posts/publicando-site-github/index.html#ajustar-o-arquivo-_quarto.yml",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üîß 3. Ajustar o arquivo _quarto.yml",
    "text": "üîß 3. Ajustar o arquivo _quarto.yml\nAbra o arquivo _quarto.yml e edite-o para que fique assim:\nproject:\n  type: website\n  output-dir: docs\nSalve o arquivo (Ctrl + S).\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site e n√£o a pasta _sites."
  },
  {
    "objectID": "posts/publicando-site-github/index.html#renderizar-o-site-localmente",
    "href": "posts/publicando-site-github/index.html#renderizar-o-site-localmente",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üß™ 4. Renderizar o site localmente",
    "text": "üß™ 4. Renderizar o site localmente\nNo console do RStudio ou clicando no bot√£o ‚ñ∂Ô∏è Render do no index.qmd, execute:\n#| eval: false\n#| echo: true\nquarto::quarto_render()\nO site ser√° gerado e aberto no navegador. Verifique se a pasta docs/ foi criada na aba Files."
  },
  {
    "objectID": "posts/publicando-site-github/index.html#commit-e-push-para-o-github",
    "href": "posts/publicando-site-github/index.html#commit-e-push-para-o-github",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üöÄ 5. Commit e push para o GitHub",
    "text": "üöÄ 5. Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio. Siga as etapas seguintes:\n\n‚úÖ 5.1 Copiar o link do reposit√≥rio no GitHub\n\nV√° at√© o reposit√≥rio no GitHub.\nClique no bot√£o verde Code.\nCopie o link que aparece na aba HTTPS (ex: https://github.com/seu-usuario/seu-repositorio.git)\n\n\n\n‚úÖ 5.2 Comandos via terminal\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\ngit remote add origin\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Substitua nome-de-usuario pelo seu usu√°rio real no GitHub.\n\nDepois, continue com os comandos:\ngit branch -M main\ngit add .\ngit commit -m \"adicionando site\"\ngit push -u origin main"
  },
  {
    "objectID": "posts/publicando-site-github/index.html#configurar-o-github-pages",
    "href": "posts/publicando-site-github/index.html#configurar-o-github-pages",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "‚öôÔ∏è 6. Configurar o GitHub Pages",
    "text": "‚öôÔ∏è 6. Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nNo reposit√≥rio, v√° em Settings &gt; Pages\nEm Source, selecione:\n\nBranch: main\nFolder: /docs\n\nClique em Save"
  },
  {
    "objectID": "posts/publicando-site-github/index.html#pronto",
    "href": "posts/publicando-site-github/index.html#pronto",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üéâ 7. Pronto!",
    "text": "üéâ 7. Pronto!\nAp√≥s alguns segundos, seu site estar√° publicado e acess√≠vel:\n\nüîó https://nome-de-usuario.github.io/meu_website\nüîó https://nome-de-usuario.github.io/ (se for um site pessoal)\n\n\nExemplo: https://astuciasnor.github.io/"
  },
  {
    "objectID": "posts/publicando-site-github/index.html#editar-o-.gitignore-e-adicionar-o-license.md",
    "href": "posts/publicando-site-github/index.html#editar-o-.gitignore-e-adicionar-o-license.md",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üìù 8. Editar o .gitignore e adicionar o LICENSE.md",
    "text": "üìù 8. Editar o .gitignore e adicionar o LICENSE.md\n\n‚úèÔ∏è Editar o .gitignore\n\nNo GitHub, abra o arquivo .gitignore e clique no √≠cone de l√°pis ‚úèÔ∏è.\n\nSubstitua o conte√∫do escolhendo o modelo adequado para R e remova a linha /docs, se presente.\n\nClique em Commit changes e escreva uma mensagem de commit e clique em Commit changes.\n\n\n\nüìÑ Adicionar o arquivo de licen√ßa\n\nClique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù\nNomeie como LICENSE.md\nClique em Choose a license template e escolha a licen√ßa deseja (ex: MIT License), revise-a e e submeta-a clicando em Review and submit.\nClique em Commit changes.\n\n\n\nüîÑ Atualize seu reposit√≥rio local\nVolte ao RStudio e clique em Pull na aba Git para sincronizar as altera√ß√µes."
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "",
    "text": "Publicar um site com Quarto via GitHub Pages √© uma forma simples e gratuita de compartilhar seu conte√∫do online. Neste guia, seguimos um fluxo pr√°tico: criamos primeiro o reposit√≥rio no GitHub, depois o projeto no RStudio com o mesmo nome, configuramos a pasta docs para publica√ß√£o, e finalizamos com ajustes nos arquivos .gitignore e LICENSE.md."
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#pr√©-requisitos",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#pr√©-requisitos",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "1 üåê Pr√©-requisitos",
    "text": "1 üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n\n‚úÖ O Git instalado e configurado no seu sistema\n\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados"
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#criar-o-reposit√≥rio-no-github",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#criar-o-reposit√≥rio-no-github",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "2 üõ†Ô∏è 1. Criar o reposit√≥rio no GitHub",
    "text": "2 üõ†Ô∏è 1. Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù.\n\nD√™ ao reposit√≥rio um dos seguintes nomes:\n\nüëâ meu_website, meu_blog ou outro nome livre\nüëâ nome-de-usuario.github.io (para uma p√°gina pessoal principal ‚Äî substitua pelo seu nome de usu√°rio real do GitHub)\n\nN√£o marque op√ß√µes como README, .gitignore ou LICENSE. Esses arquivos ser√£o criados depois."
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#criar-seu-website-ou-blog-no-rstudio",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#criar-seu-website-ou-blog-no-rstudio",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "3 üíª 2. Criar seu website ou blog no RStudio",
    "text": "3 üíª 2. Criar seu website ou blog no RStudio\nEmbora seja poss√≠vel iniciar o projeto diretamente no RStudio, optamos por criar primeiro o reposit√≥rio no GitHub. Essa ordem segue boas pr√°ticas de versionamento, facilitando a integra√ß√£o entre o reposit√≥rio remoto e o projeto local desde o in√≠cio.\n\nV√° at√©: File &gt; New Project &gt; Quarto Website (ou Quarto Blog)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub:\n\nmeu_website, meu_blog, ou nome-de-usuario.github.io\n\nEscolha o diret√≥rio onde o projeto ser√° salvo.\nClique em Create Project.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o."
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#ajustar-o-arquivo-_quarto.yml",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#ajustar-o-arquivo-_quarto.yml",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "4 üîß 3. Ajustar o arquivo _quarto.yml",
    "text": "4 üîß 3. Ajustar o arquivo _quarto.yml\nAbra o arquivo _quarto.yml e edite-o para que fique assim:\nproject:\n  type: website\n  output-dir: docs\nSalve o arquivo (Ctrl + S).\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site e n√£o a pasta _sites."
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#renderizar-o-site-localmente",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#renderizar-o-site-localmente",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "5 üß™ 4. Renderizar o site localmente",
    "text": "5 üß™ 4. Renderizar o site localmente\nNo console do RStudio ou clicando no bot√£o ‚ñ∂Ô∏è Render do no index.qmd, execute:\n#| eval: false\n#| echo: true\nquarto::quarto_render()\nO site ser√° gerado e aberto no navegador. Verifique se a pasta docs/ foi criada na aba Files."
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#commit-e-push-para-o-github",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#commit-e-push-para-o-github",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "6 üöÄ 5. Commit e push para o GitHub",
    "text": "6 üöÄ 5. Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio. Siga as etapas seguintes:\n\n6.1 ‚úÖ 5.1 Copiar o link do reposit√≥rio no GitHub\n\nV√° at√© o reposit√≥rio no GitHub.\nClique no bot√£o verde Code.\nCopie o link que aparece na aba HTTPS (ex: https://github.com/seu-usuario/seu-repositorio.git)\n\n\n\n6.2 ‚úÖ 5.2 Comandos via terminal\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\ngit remote add origin\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Substitua nome-de-usuario pelo seu usu√°rio real no GitHub.\n\nDepois, continue com os comandos:\ngit branch -M main\ngit add .\ngit commit -m \"adicionando site\"\ngit push -u origin main"
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#configurar-o-github-pages",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#configurar-o-github-pages",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "7 ‚öôÔ∏è 6. Configurar o GitHub Pages",
    "text": "7 ‚öôÔ∏è 6. Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nNo reposit√≥rio, v√° em Settings &gt; Pages\nEm Source, selecione:\n\nBranch: main\nFolder: /docs\n\nClique em Save"
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#pronto",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#pronto",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "8 üéâ 7. Pronto!",
    "text": "8 üéâ 7. Pronto!\nAp√≥s alguns segundos, seu site estar√° publicado e acess√≠vel:\n\nüîó https://nome-de-usuario.github.io/meu_website\nüîó https://nome-de-usuario.github.io/ (se for um site pessoal)\n\n\nExemplo: https://astuciasnor.github.io/"
  },
  {
    "objectID": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#editar-o-.gitignore-e-adicionar-o-license.md",
    "href": "docs/posts/publicando-site-github/guia_quarto_github_pages_atualizado.html#editar-o-.gitignore-e-adicionar-o-license.md",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "9 üìù 8. Editar o .gitignore e adicionar o LICENSE.md",
    "text": "9 üìù 8. Editar o .gitignore e adicionar o LICENSE.md\n\n9.1 ‚úèÔ∏è Editar o .gitignore\n\nNo GitHub, abra o arquivo .gitignore e clique no √≠cone de l√°pis ‚úèÔ∏è.\n\nSubstitua o conte√∫do por um modelo adequado para R e remova a linha /docs, se presente.\n\nEscreva uma mensagem de commit e clique em Commit changes.\n\n\n\n9.2 üìÑ Adicionar o arquivo de licen√ßa\n\nClique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù\nNomeie como LICENSE.md\nCole o texto da licen√ßa desejada (ex: MIT License)\nClique em Commit new file\n\n\n\n9.3 üîÑ Atualize seu reposit√≥rio local\nVolte ao RStudio e clique em Pull na aba Git para sincronizar as altera√ß√µes."
  },
  {
    "objectID": "posts/publicando-site-github/index_velho.html#como-publicar-um-site-quarto-no-github-pages",
    "href": "posts/publicando-site-github/index_velho.html#como-publicar-um-site-quarto-no-github-pages",
    "title": "Publicando Site Quarto no Github",
    "section": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages",
    "text": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages\nPublicar um site feito com Quarto usando o GitHub Pages √© uma maneira pr√°tica e gratuita de compartilhar seu conte√∫do online. Abaixo, apresento um passo a passo simples e eficaz para configurar tudo corretamente. Optamos primeiro por fazer o reposit√≥rio no Github e depois fazer no Rstudio com o mesmo nome, depois criaamos a p√°gina docs para permitir a publica√ß√£o e finalemente edita√ß√£o do arquivo .gitigonore e LICENSE.md\n\n1.1 üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n‚úÖ O Git instalado e configurado no seu sistema\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados\n\n\n\n1.2 üõ†Ô∏è Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù (ou ‚ÄúNovo reposit√≥rio‚Äù).\nEscolha um nome para o seu reposit√≥rio:\n\n\nPara um site ou blog comum:\n\nüëâ meu_website, meu_blog ou outro nome de sua prefer√™ncia\n\nPara uma p√°gina pessoal principal (formato recomendado pelo GitHub):\n\nüëâ nome-de-usuario.github.io\n(substitua nome-de-usuario pelo seu nome real no GitHub, por exemplo: astuciasnor.github.io)\n\n\n\nImportante:\nN√£o marque nenhuma op√ß√£o como ‚ÄúAdd a README file‚Äù, ‚Äú.gitignore‚Äù ou ‚ÄúLICENSE‚Äù neste momento.\nEsses arquivos ser√£o criados e configurados posteriormente, conforme as boas pr√°ticas de versionamento com Quarto.\n\n\n\n1.3 üíª Criar seu website ou blog no RStudio\nEsta etapa pode ser feita antes da cria√ß√£o do repert√≥rio no Github. Por raz√µes de boa pr√°tica de uso do Git, optamos por fazer primerio o reposit√≥rio no Github.\nPara criar seu website ou blog, siga os passos abaixo no RStudio para gerar automaticamente seu projeto Quarto:\n\nV√° at√© o menu: File &gt; New Project &gt; Quarto Website (ou Quarto Blog, se for o caso)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub, para manter a consist√™ncia. Voc√™ pode usar, por exemplo:\n\n\nüëâ meu_website (para um site gen√©rico)\nüëâ meu_blog (para blogs com estrutura de postagens)\nüëâ nome-de-usuario.github.io (para sua p√°gina pessoal principal, substituindo pelo seu nome de usu√°rio real do GitHub ‚Äî ex: astuciasnor.github.io)\n\n\nEscolha o diret√≥rio local onde o projeto ser√° salvo no seu computador.\nClique em Create Project para finalizar a cria√ß√£o.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o.\n\n\n1.4 üîß Ajustar o arquivo _quarto.yml\n\nNo RStudio, localize e abra o arquivo _quarto.yml do seu projeto.\nAdicione a linha output-dir: docs logo abaixo da linha type: website, conforme o exemplo abaixo:\n\n\nproject:\n  type: website\n  output-dir: docs\n\n\nSalve o arquivo (Ctrl + S ou File &gt; Save).\n\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site e n√£o a pasta _sites.\n\n\n1.5 üß™ Renderizar o site localmente\nPara gerar e visualizar seu site Quarto no navegador, voc√™ pode fazer isso de duas formas:\n\nClique no bot√£o ‚ñ∂Ô∏è ‚ÄúRender‚Äù no canto superior direito do RStudio,\nou\nExecute o comando abaixo diretamente no console do RStudio:\n\n\nquarto::quarto_render()\n\nAp√≥s a renderiza√ß√£o:\n\nA p√°gina HTML do seu site ser√° aberta automaticamente no navegador.\nVerifique se a pasta docs/ foi criada na aba Files do RStudio. √â dentro dela que o Quarto salva os arquivos do site que ser√£o enviados ao GitHub.\n\n\n\n1.6 üöÄ Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio.\n\n1.6.1 ‚úÖ Comandos via terminal\nAntes de rodar os comandos abaixo, voc√™ precisa copiar o link do seu reposit√≥rio no GitHub. Para isso:\n\nV√° at√© a p√°gina do seu reposit√≥rio no GitHub.\nClique no bot√£o verde Code (localizado acima da lista de arquivos).\nCopie o link que aparece na aba HTTPS, como no exemplo abaixo:\n\n\nhttps://github.com/seu-usuario/seu-repositorio.git\n\nundefined\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\n\ngit remote add origin\n\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Lembre-se de substituir nome-de-usuario pelo seu usu√°rio real no GitHub, e my_page pelo nome do seu reposit√≥rio.\n\nExecute os comandos abaixo no terminal para preparar e enviar os arquivos ao Github:\n\n\n# Define o nome da branch principal como 'main'\ngit branch -M main\n\n# Adiciona todos os arquivos ao controle de vers√£o\ngit add .\n\n# Cria um commit com uma mensagem\ngit commit -m \"adicionando site\"\n\n# Envia os arquivos para o GitHub\ngit push -u origin main\n\n\n\n1.6.2 üí° Observa√ß√µes importantes\n\nCertifique-se de que o projeto foi inicializado com Git (√≠cone Git no canto superior direito do RStudio).\nSe o projeto j√° foi conectado a um reposit√≥rio remoto, n√£o execute novamente git remote add origin ..., pois isso geraria conflito.\nAp√≥s o git push, os arquivos do seu site estar√£o publicados no GitHub.\n\n\n\n\n1.7 ‚öôÔ∏è Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nAcesse seu reposit√≥rio no GitHub.\nV√° para a aba Settings (Configura√ß√µes) ‚Äî ela fica no canto superior direito do reposit√≥rio.\nNo menu lateral, clique em Pages (ou procure por ‚ÄúPages‚Äù na barra de busca).\nEm Source, configure os seguintes valores:\n\nBranch: main\nFolder: /docs\n\n\n\n\nClique no bot√£o Save.\n\n\n\n1.8 üéâ Pronto!\nüîÑ Ap√≥s alguns segundos, seu site estar√° publicado e acess√≠vel em qualquer navegador. O endere√ßo depende do nome que voc√™ deu ao reposit√≥rio no GitHub:\n\nüîó https://nome-de-usuario.github.io/meu_website\n(quando o nome do reposit√≥rio √© diferente do seu nome de usu√°rio)\n\n\n\nüîó https://nome-de-usuario.github.io/\n(quando o reposit√≥rio se chama nome-de-usuario.github.io)\n\n\nExemplos:\nhttps://astuciasnor.github.io/\nhttps://astuciasnor.github.io/meu_website\n\nParab√©ns! ü•≥ Seu site com Quarto e GitHub Pages j√° est√° no ar.\n\n\n1.9 üìù Editar/adicionar os arquivo .gitignore e LICENSE.md\nComo etapa final, vamos ajustar o arquivo .gitignore e criar a licen√ßa do projeto:\n\n1.9.1 ‚úèÔ∏è Editar o .gitignore:\n\nAcesse o reposit√≥rio no GitHub e localize o arquivo .gitignore.\nClique no nome do arquivo e depois no √≠cone de l√°pis ‚úèÔ∏è para edit√°-lo.\nSubstitua o conte√∫do por um modelo apropriado para projetos em R.\nRemova a linha /docs, se estiver presente (ela impediria a publica√ß√£o do site).\nEscreva uma mensagem de commit explicando a altera√ß√£o e clique em Commit changes.\n\n\n\n1.9.2 üìÑ Adicionar o arquivo de licen√ßa:\n\nNo reposit√≥rio, clique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù.\nNomeie o novo arquivo como: LICENSE.md\nInsira o conte√∫do da licen√ßa desejada (por exemplo, a MIT License, dispon√≠vel como sugest√£o no GitHub).\nClique em Commit new file para salvar.\n\n\n\n1.9.3 üîÑ Atualizar o reposit√≥rio local:\nAp√≥s essas altera√ß√µes, volte ao RStudio e clique no bot√£o Pull na aba Git para sincronizar o reposit√≥rio local com o remoto."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html",
    "href": "docs/posts/publicando-site-github/index.html",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "",
    "text": "Publicar um site com Quarto via GitHub Pages √© uma forma simples e gratuita de compartilhar seu conte√∫do online. Neste guia, seguimos um fluxo pr√°tico: criamos primeiro o reposit√≥rio no GitHub, depois o projeto no RStudio com o mesmo nome, configuramos a pasta docs para publica√ß√£o, e finalizamos com ajustes nos arquivos .gitignore e LICENSE.md."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#pr√©-requisitos",
    "href": "docs/posts/publicando-site-github/index.html#pr√©-requisitos",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üåê Pr√©-requisitos",
    "text": "üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n\n‚úÖ O Git instalado e configurado no seu sistema\n\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados"
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#criar-o-reposit√≥rio-no-github",
    "href": "docs/posts/publicando-site-github/index.html#criar-o-reposit√≥rio-no-github",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üõ†Ô∏è 1. Criar o reposit√≥rio no GitHub",
    "text": "üõ†Ô∏è 1. Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù.\n\nD√™ ao reposit√≥rio um dos seguintes nomes:\n\nüëâ meu_website, meu_blog ou outro nome livre\nüëâ nome-de-usuario.github.io (para uma p√°gina pessoal principal ‚Äî substitua pelo seu nome de usu√°rio real do GitHub)\n\nN√£o marque op√ß√µes como README, .gitignore ou LICENSE. Esses arquivos ser√£o criados depois."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#criar-seu-website-ou-blog-no-rstudio",
    "href": "docs/posts/publicando-site-github/index.html#criar-seu-website-ou-blog-no-rstudio",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üíª 2. Criar seu website ou blog no RStudio",
    "text": "üíª 2. Criar seu website ou blog no RStudio\nEmbora seja poss√≠vel iniciar o projeto diretamente no RStudio, optamos por criar primeiro o reposit√≥rio no GitHub. Essa ordem segue boas pr√°ticas de versionamento, facilitando a integra√ß√£o entre o reposit√≥rio remoto e o projeto local desde o in√≠cio.\n\nV√° at√©: File &gt; New Project &gt; New Directory &gt; Quarto Website (ou Quarto Blog)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub:\n\nmeu_website, meu_blog, ou nome-de-usuario.github.io\n\nEscolha o diret√≥rio onde o projeto ser√° salvo.\nClique em Create a git repository.\nClique em Create Project.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#ajustar-o-arquivo-_quarto.yml",
    "href": "docs/posts/publicando-site-github/index.html#ajustar-o-arquivo-_quarto.yml",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üîß 3. Ajustar o arquivo _quarto.yml",
    "text": "üîß 3. Ajustar o arquivo _quarto.yml\nAbra o arquivo _quarto.yml e edite-o para que fique assim:\nproject:\n  type: website\n  output-dir: docs\nSalve o arquivo (Ctrl + S).\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site e n√£o a pasta _sites."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#renderizar-o-site-localmente",
    "href": "docs/posts/publicando-site-github/index.html#renderizar-o-site-localmente",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üß™ 4. Renderizar o site localmente",
    "text": "üß™ 4. Renderizar o site localmente\nNo console do RStudio ou clicando no bot√£o ‚ñ∂Ô∏è Render do no index.qmd, execute:\n#| eval: false\n#| echo: true\nquarto::quarto_render()\nO site ser√° gerado e aberto no navegador. Verifique se a pasta docs/ foi criada na aba Files."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#commit-e-push-para-o-github",
    "href": "docs/posts/publicando-site-github/index.html#commit-e-push-para-o-github",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üöÄ 5. Commit e push para o GitHub",
    "text": "üöÄ 5. Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio. Siga as etapas seguintes:\n\n‚úÖ 5.1 Copiar o link do reposit√≥rio no GitHub\n\nV√° at√© o reposit√≥rio no GitHub.\nClique no bot√£o verde Code.\nCopie o link que aparece na aba HTTPS (ex: https://github.com/seu-usuario/seu-repositorio.git)\n\n\n\n‚úÖ 5.2 Comandos via terminal\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\ngit remote add origin\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Substitua nome-de-usuario pelo seu usu√°rio real no GitHub.\n\nDepois, continue com os comandos:\ngit branch -M main\ngit add .\ngit commit -m \"adicionando site\"\ngit push -u origin main"
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#configurar-o-github-pages",
    "href": "docs/posts/publicando-site-github/index.html#configurar-o-github-pages",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "‚öôÔ∏è 6. Configurar o GitHub Pages",
    "text": "‚öôÔ∏è 6. Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nNo reposit√≥rio, v√° em Settings &gt; Pages\nEm Source, selecione:\n\nBranch: main\nFolder: /docs\n\nClique em Save"
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#pronto",
    "href": "docs/posts/publicando-site-github/index.html#pronto",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üéâ 7. Pronto!",
    "text": "üéâ 7. Pronto!\nAp√≥s alguns segundos, seu site estar√° publicado e acess√≠vel:\n\nüîó https://nome-de-usuario.github.io/meu_website\nüîó https://nome-de-usuario.github.io/ (se for um site pessoal)\n\n\nExemplo: https://astuciasnor.github.io/"
  },
  {
    "objectID": "docs/posts/publicando-site-github/index.html#editar-o-.gitignore-e-adicionar-o-license.md",
    "href": "docs/posts/publicando-site-github/index.html#editar-o-.gitignore-e-adicionar-o-license.md",
    "title": "Publica√ß√£o de Website com Quarto e GitHub Pages",
    "section": "üìù 8. Editar o .gitignore e adicionar o LICENSE.md",
    "text": "üìù 8. Editar o .gitignore e adicionar o LICENSE.md\n\n‚úèÔ∏è Editar o .gitignore\n\nNo GitHub, abra o arquivo .gitignore e clique no √≠cone de l√°pis ‚úèÔ∏è.\n\nSubstitua o conte√∫do escolhendo o modelo adequado para R e remova a linha /docs, se presente.\n\nClique em Commit changes e escreva uma mensagem de commit e clique em Commit changes.\n\n\n\nüìÑ Adicionar o arquivo de licen√ßa\n\nClique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù\nNomeie como LICENSE.md\nClique em Choose a license template e escolha a licen√ßa deseja (ex: MIT License), revise-a e e submeta-a clicando em Review and submit.\nClique em Commit changes.\n\n\n\nüîÑ Atualize seu reposit√≥rio local\nVolte ao RStudio e clique em Pull na aba Git para sincronizar as altera√ß√µes."
  },
  {
    "objectID": "docs/posts/publicando-site-github/index_velho.html#como-publicar-um-site-quarto-no-github-pages",
    "href": "docs/posts/publicando-site-github/index_velho.html#como-publicar-um-site-quarto-no-github-pages",
    "title": "Publicando Site Quarto no Github",
    "section": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages",
    "text": "1 üöÄ Como Publicar um Site Quarto no GitHub Pages\nPublicar um site feito com Quarto usando o GitHub Pages √© uma maneira pr√°tica e gratuita de compartilhar seu conte√∫do online. Abaixo, apresento um passo a passo simples e eficaz para configurar tudo corretamente. Optamos primeiro por fazer o reposit√≥rio no Github e depois fazer no Rstudio com o mesmo nome, depois criaamos a p√°gina docs para permitir a publica√ß√£o e finalemente edita√ß√£o do arquivo .gitigonore e LICENSE.md\n\n1.1 üåê Pr√©-requisitos\nAntes de come√ßar, verifique se voc√™ possui os seguintes itens instalados e configurados:\n\n‚úÖ Uma conta ativa no GitHub\n‚úÖ O Git instalado e configurado no seu sistema\n‚úÖ O R, RStudio e o pacote quarto devidamente instalados\n\n\n\n1.2 üõ†Ô∏è Criar o reposit√≥rio no GitHub\n\nAcesse github.com e clique em ‚ÄúNew Repository‚Äù (ou ‚ÄúNovo reposit√≥rio‚Äù).\nEscolha um nome para o seu reposit√≥rio:\n\n\nPara um site ou blog comum:\n\nüëâ meu_website, meu_blog ou outro nome de sua prefer√™ncia\n\nPara uma p√°gina pessoal principal (formato recomendado pelo GitHub):\n\nüëâ nome-de-usuario.github.io\n(substitua nome-de-usuario pelo seu nome real no GitHub, por exemplo: astuciasnor.github.io)\n\n\n\nImportante:\nN√£o marque nenhuma op√ß√£o como ‚ÄúAdd a README file‚Äù, ‚Äú.gitignore‚Äù ou ‚ÄúLICENSE‚Äù neste momento.\nEsses arquivos ser√£o criados e configurados posteriormente, conforme as boas pr√°ticas de versionamento com Quarto.\n\n\n\n1.3 üíª Criar seu website ou blog no RStudio\nEsta etapa pode ser feita antes da cria√ß√£o do repert√≥rio no Github. Por raz√µes de boa pr√°tica de uso do Git, optamos por fazer primerio o reposit√≥rio no Github.\nPara criar seu website ou blog, siga os passos abaixo no RStudio para gerar automaticamente seu projeto Quarto:\n\nV√° at√© o menu: File &gt; New Project &gt; Quarto Website (ou Quarto Blog, se for o caso)\nD√™ ao projeto o mesmo nome do reposit√≥rio criado no GitHub, para manter a consist√™ncia. Voc√™ pode usar, por exemplo:\n\n\nüëâ meu_website (para um site gen√©rico)\nüëâ meu_blog (para blogs com estrutura de postagens)\nüëâ nome-de-usuario.github.io (para sua p√°gina pessoal principal, substituindo pelo seu nome de usu√°rio real do GitHub ‚Äî ex: astuciasnor.github.io)\n\n\nEscolha o diret√≥rio local onde o projeto ser√° salvo no seu computador.\nClique em Create Project para finalizar a cria√ß√£o.\n\nO RStudio abrir√° automaticamente o novo projeto com os arquivos iniciais (index.qmd, _quarto.yml etc.) prontos para edi√ß√£o e publica√ß√£o.\n\n\n1.4 üîß Ajustar o arquivo _quarto.yml\n\nNo RStudio, localize e abra o arquivo _quarto.yml do seu projeto.\nAdicione a linha output-dir: docs logo abaixo da linha type: website, conforme o exemplo abaixo:\n\n\nproject:\n  type: website\n  output-dir: docs\n\n\nSalve o arquivo (Ctrl + S ou File &gt; Save).\n\nEssa configura√ß√£o define que os arquivos gerados pelo Quarto ser√£o salvos na pasta docs, que √© a exig√™ncia do GitHub Pages para publicar seu site e n√£o a pasta _sites.\n\n\n1.5 üß™ Renderizar o site localmente\nPara gerar e visualizar seu site Quarto no navegador, voc√™ pode fazer isso de duas formas:\n\nClique no bot√£o ‚ñ∂Ô∏è ‚ÄúRender‚Äù no canto superior direito do RStudio,\nou\nExecute o comando abaixo diretamente no console do RStudio:\n\n\nquarto::quarto_render()\n\nAp√≥s a renderiza√ß√£o:\n\nA p√°gina HTML do seu site ser√° aberta automaticamente no navegador.\nVerifique se a pasta docs/ foi criada na aba Files do RStudio. √â dentro dela que o Quarto salva os arquivos do site que ser√£o enviados ao GitHub.\n\n\n\n1.6 üöÄ Commit e push para o GitHub\nAp√≥s renderizar seu site localmente, √© hora de enviar os arquivos para o reposit√≥rio no GitHub. Voc√™ pode fazer isso pelo terminal (integrado ao RStudio) ou pela interface Git do pr√≥prio RStudio.\n\n1.6.1 ‚úÖ Comandos via terminal\nAntes de rodar os comandos abaixo, voc√™ precisa copiar o link do seu reposit√≥rio no GitHub. Para isso:\n\nV√° at√© a p√°gina do seu reposit√≥rio no GitHub.\nClique no bot√£o verde Code (localizado acima da lista de arquivos).\nCopie o link que aparece na aba HTTPS, como no exemplo abaixo:\n\n\nhttps://github.com/seu-usuario/seu-repositorio.git\n\nundefined\nDepois de copiar o link HTTPS do seu reposit√≥rio no GitHub, volte ao terminal do RStudio e digite o seguinte comando:\n\ngit remote add origin\n\nEm seguida, cole o link copiado logo ap√≥s esse comando, ficando assim:\n\n# Exemplo 1 ‚Äî para p√°gina pessoal\ngit remote add origin https://github.com/nome-de-usuario.github.io.git\n\n# Exemplo 2 ‚Äî para outro tipo de site ou blog\ngit remote add origin https://github.com/nome-de-usuario/my_page.git\n\nüìå Lembre-se de substituir nome-de-usuario pelo seu usu√°rio real no GitHub, e my_page pelo nome do seu reposit√≥rio.\n\nExecute os comandos abaixo no terminal para preparar e enviar os arquivos ao Github:\n\n\n# Define o nome da branch principal como 'main'\ngit branch -M main\n\n# Adiciona todos os arquivos ao controle de vers√£o\ngit add .\n\n# Cria um commit com uma mensagem\ngit commit -m \"adicionando site\"\n\n# Envia os arquivos para o GitHub\ngit push -u origin main\n\n\n\n1.6.2 üí° Observa√ß√µes importantes\n\nCertifique-se de que o projeto foi inicializado com Git (√≠cone Git no canto superior direito do RStudio).\nSe o projeto j√° foi conectado a um reposit√≥rio remoto, n√£o execute novamente git remote add origin ..., pois isso geraria conflito.\nAp√≥s o git push, os arquivos do seu site estar√£o publicados no GitHub.\n\n\n\n\n1.7 ‚öôÔ∏è Configurar o GitHub Pages\nAgora que os arquivos do site est√£o no reposit√≥rio, √© hora de ativar o GitHub Pages para public√°-lo na web:\n\nAcesse seu reposit√≥rio no GitHub.\nV√° para a aba Settings (Configura√ß√µes) ‚Äî ela fica no canto superior direito do reposit√≥rio.\nNo menu lateral, clique em Pages (ou procure por ‚ÄúPages‚Äù na barra de busca).\nEm Source, configure os seguintes valores:\n\nBranch: main\nFolder: /docs\n\n\n\n\nClique no bot√£o Save.\n\n\n\n1.8 üéâ Pronto!\nüîÑ Ap√≥s alguns segundos, seu site estar√° publicado e acess√≠vel em qualquer navegador. O endere√ßo depende do nome que voc√™ deu ao reposit√≥rio no GitHub:\n\nüîó https://nome-de-usuario.github.io/meu_website\n(quando o nome do reposit√≥rio √© diferente do seu nome de usu√°rio)\n\n\n\nüîó https://nome-de-usuario.github.io/\n(quando o reposit√≥rio se chama nome-de-usuario.github.io)\n\n\nExemplos:\nhttps://astuciasnor.github.io/\nhttps://astuciasnor.github.io/meu_website\n\nParab√©ns! ü•≥ Seu site com Quarto e GitHub Pages j√° est√° no ar.\n\n\n1.9 üìù Editar/adicionar os arquivo .gitignore e LICENSE.md\nComo etapa final, vamos ajustar o arquivo .gitignore e criar a licen√ßa do projeto:\n\n1.9.1 ‚úèÔ∏è Editar o .gitignore:\n\nAcesse o reposit√≥rio no GitHub e localize o arquivo .gitignore.\nClique no nome do arquivo e depois no √≠cone de l√°pis ‚úèÔ∏è para edit√°-lo.\nSubstitua o conte√∫do por um modelo apropriado para projetos em R.\nRemova a linha /docs, se estiver presente (ela impediria a publica√ß√£o do site).\nEscreva uma mensagem de commit explicando a altera√ß√£o e clique em Commit changes.\n\n\n\n1.9.2 üìÑ Adicionar o arquivo de licen√ßa:\n\nNo reposit√≥rio, clique em ‚ÄúAdd file‚Äù &gt; ‚ÄúCreate new file‚Äù.\nNomeie o novo arquivo como: LICENSE.md\nInsira o conte√∫do da licen√ßa desejada (por exemplo, a MIT License, dispon√≠vel como sugest√£o no GitHub).\nClique em Commit new file para salvar.\n\n\n\n1.9.3 üîÑ Atualizar o reposit√≥rio local:\nAp√≥s essas altera√ß√µes, volte ao RStudio e clique no bot√£o Pull na aba Git para sincronizar o reposit√≥rio local com o remoto."
  },
  {
    "objectID": "index.html#atualizando-websites",
    "href": "index.html#atualizando-websites",
    "title": "Bem-vindo ao ClubeR",
    "section": "1.1 Atualizando websites",
    "text": "1.1 Atualizando websites\ngit branch -m master main\ngit fetch origin\ngit branch -u origin/main main\ngit remote set-head origin -a"
  }
]